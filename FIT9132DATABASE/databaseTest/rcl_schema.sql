-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-09-18 00:21:24 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

set echo on
SPOOL rcl_schema_output.txt

-- G156B

DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE book_type CASCADE CONSTRAINTS;

DROP TABLE bookcopy CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE catalogue_author CASCADE CONSTRAINTS;

DROP TABLE catalogue_entry CASCADE CONSTRAINTS;

DROP TABLE catalogue_subject CASCADE CONSTRAINTS;

DROP TABLE class CASCADE CONSTRAINTS;

DROP TABLE fine CASCADE CONSTRAINTS;

DROP TABLE isbn CASCADE CONSTRAINTS;

DROP TABLE lga CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reservation CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE author (
    author_id         CHAR(4) NOT NULL,
    author_first_name VARCHAR2(50) NOT NULL,
    author_last_name  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN author.author_id IS
    'author''s id';

COMMENT ON COLUMN author.author_first_name IS
    'author''s first name';

COMMENT ON COLUMN author.author_last_name IS
    'author''s last name';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE book_type (
    book_type_id   CHAR(4) NOT NULL,
    book_type_name VARCHAR2(50)
);

COMMENT ON COLUMN book_type.book_type_id IS
    'bood type';

COMMENT ON COLUMN book_type.book_type_name IS
    'book type name';

ALTER TABLE book_type ADD CONSTRAINT isbn_book_type_pk PRIMARY KEY ( book_type_id );

CREATE TABLE bookcopy (
    branch_code     CHAR(3) NOT NULL,
    bookcopy_id     CHAR(4) NOT NULL,
    bookcopy_status VARCHAR2(50) NOT NULL,
    bookcopy_price  NUMBER(10, 2) NOT NULL,
    isbn_code       CHAR(13) NOT NULL
);

COMMENT ON COLUMN bookcopy.branch_code IS
    'Unique identifier for each branch';

COMMENT ON COLUMN bookcopy.bookcopy_id IS
    'unique identifer of each book copy';

COMMENT ON COLUMN bookcopy.bookcopy_status IS
    'book copy''s condition like stolen, lost, or damaged.';

COMMENT ON COLUMN bookcopy.bookcopy_price IS
    'bookcopy''s price';

COMMENT ON COLUMN bookcopy.isbn_code IS
    'isbn that consist with 13 digits';

ALTER TABLE bookcopy ADD CONSTRAINT bookcopy_pk PRIMARY KEY ( bookcopy_id,
                                                              branch_code );

CREATE TABLE borrower (
    borrower_no               CHAR(4) NOT NULL,
    borrower_first_name       VARCHAR2(50) NOT NULL,
    borrower_last_name        VARCHAR2(50) NOT NULL,
    borrower_address_street   VARCHAR2(150) NOT NULL,
    borrower_address_town     VARCHAR2(50) NOT NULL,
    borrower_address_state    VARCHAR2(50) NOT NULL,
    borrower_address_postcode CHAR(4) NOT NULL,
    borrower_status           VARCHAR2(50) NOT NULL,
    borrower_phone            VARCHAR2(20),
    branch_code               CHAR(3) NOT NULL,
    class_id                  CHAR(3) NOT NULL
);

COMMENT ON COLUMN borrower.borrower_no IS
    'Borrower''s unique identifer';

COMMENT ON COLUMN borrower.borrower_first_name IS
    'Borrower''s first name';

COMMENT ON COLUMN borrower.borrower_last_name IS
    'Borrower''s phone number';

COMMENT ON COLUMN borrower.borrower_address_street IS
    'Borrower''s contact address of street';

COMMENT ON COLUMN borrower.borrower_address_town IS
    'Borrower''s contact address of town';

COMMENT ON COLUMN borrower.borrower_address_state IS
    'Borrower''s contact address of state';

COMMENT ON COLUMN borrower.borrower_address_postcode IS
    'Borrower''s contact address of postcode, the post code is an Australian post code digit 4';

COMMENT ON COLUMN borrower.borrower_status IS
    'Borrower''s borrowing status, Permitted or Banned';

COMMENT ON COLUMN borrower.borrower_phone IS
    'Borrower''s phone number';

COMMENT ON COLUMN borrower.branch_code IS
    'Unique identifier for each branch';

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

CREATE TABLE branch (
    branch_code    CHAR(3) NOT NULL,
    branch_name    VARCHAR2(50) NOT NULL,
    branch_address VARCHAR2(255) NOT NULL,
    branch_phone   VARCHAR2(50) NOT NULL,
    lga_code       CHAR(3) NOT NULL,
    manager_id     CHAR(4) NOT NULL
);

COMMENT ON COLUMN branch.branch_code IS
    'Unique identifier for each branch';

COMMENT ON COLUMN branch.branch_name IS
    ' Name of the branch';

COMMENT ON COLUMN branch.branch_address IS
    'Address of the branch';

COMMENT ON COLUMN branch.branch_phone IS
    'branch_phone';

COMMENT ON COLUMN branch.lga_code IS
    'Primary Key: Unique identifier for each LGA';

COMMENT ON COLUMN branch.manager_id IS
    'unique identifer of manager';

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE catalogue_author (
    author_id   CHAR(4) NOT NULL,
    cat_call_no VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN catalogue_author.author_id IS
    'author''s id';

COMMENT ON COLUMN catalogue_author.cat_call_no IS
    'catalogue''s call number';

ALTER TABLE catalogue_author ADD CONSTRAINT ctalogue_author_uq PRIMARY KEY ( author_id,
                                                                             cat_call_no );

CREATE TABLE catalogue_entry (
    cat_call_no          VARCHAR2(50) NOT NULL,
    cat_title            VARCHAR2(255) NOT NULL,
    cat_content_desc     VARCHAR2(255),
    cat_publication_year CHAR(4) NOT NULL,
    cat_eddition         VARCHAR2(50),
    cat_classification   VARCHAR2(50) NOT NULL,
    cat_number_of_pages  NUMBER(10) NOT NULL,
    cat_reading_level    NUMBER(2),
    cat_language         VARCHAR2(50) NOT NULL,
    cat_note             VARCHAR2(150),
    publisher_id         CHAR(4) NOT NULL
);

COMMENT ON COLUMN catalogue_entry.cat_call_no IS
    'catalogue''s call number';

COMMENT ON COLUMN catalogue_entry.cat_title IS
    'catalogue''s title';

COMMENT ON COLUMN catalogue_entry.cat_content_desc IS
    'catalogue''s description';

COMMENT ON COLUMN catalogue_entry.cat_publication_year IS
    'catalogue''s publication year';

COMMENT ON COLUMN catalogue_entry.cat_eddition IS
    'eddition of the book';

COMMENT ON COLUMN catalogue_entry.cat_classification IS
    'classification of the catalogue';

COMMENT ON COLUMN catalogue_entry.cat_number_of_pages IS
    'catalogue''s number of pages';

COMMENT ON COLUMN catalogue_entry.cat_reading_level IS
    'catalogue''s reading lever';

COMMENT ON COLUMN catalogue_entry.cat_language IS
    'language of the book';

COMMENT ON COLUMN catalogue_entry.cat_note IS
    'remarks of the book';

COMMENT ON COLUMN catalogue_entry.publisher_id IS
    'unique identifer of publisher';

ALTER TABLE catalogue_entry ADD CONSTRAINT catalogue_entry_pk PRIMARY KEY ( cat_call_no );

CREATE TABLE catalogue_subject (
    cat_call_no VARCHAR2(50) NOT NULL,
    subject_id  CHAR(4) NOT NULL
);

COMMENT ON COLUMN catalogue_subject.cat_call_no IS
    'catalogue''s call number';

COMMENT ON COLUMN catalogue_subject.subject_id IS
    'subject id for identifying the subject';

ALTER TABLE catalogue_subject ADD CONSTRAINT catalogue_subject_pk PRIMARY KEY ( cat_call_no,
                                                                                subject_id );

CREATE TABLE class (
    class_id          CHAR(3) NOT NULL,
    class_name        VARCHAR2(50) NOT NULL,
    class_lone_limit  NUMBER NOT NULL,
    class_loan_period NUMBER NOT NULL
);

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( class_id );

CREATE TABLE fine (
    fine_id      CHAR(4) NOT NULL,
    fine_amount  NUMBER(10, 2),
    fine_paydate DATE,
    loan_id      CHAR(8) NOT NULL
);

COMMENT ON COLUMN fine.fine_id IS
    'fine id for manage the fine of loan';

COMMENT ON COLUMN fine.fine_amount IS
    'the amount of the fine per loan';

COMMENT ON COLUMN fine.fine_paydate IS
    'the date of the payment of fine';

COMMENT ON COLUMN fine.loan_id IS
    'loan''s unique identifer';

ALTER TABLE fine ADD CONSTRAINT fine_pk PRIMARY KEY ( fine_id );

ALTER TABLE fine ADD CONSTRAINT fine_uq UNIQUE ( loan_id );

CREATE TABLE isbn (
    isbn_code    CHAR(13) NOT NULL,
    cat_call_no  VARCHAR2(50) NOT NULL,
    book_type_id CHAR(4) NOT NULL
);

COMMENT ON COLUMN isbn.isbn_code IS
    'isbn that consist with 13 digits';

COMMENT ON COLUMN isbn.cat_call_no IS
    'catalogue''s call number';

COMMENT ON COLUMN isbn.book_type_id IS
    'bood type';

ALTER TABLE isbn ADD CONSTRAINT isbn_pk PRIMARY KEY ( isbn_code );

CREATE TABLE lga (
    lga_code          CHAR(3) NOT NULL,
    lga_name          VARCHAR2(50) NOT NULL,
    lga_size          VARCHAR2(50) NOT NULL,
    lga_contact_name  VARCHAR2(50) NOT NULL,
    lga_contact_phone VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN lga.lga_code IS
    'Primary Key: Unique identifier for each LGA';

COMMENT ON COLUMN lga.lga_name IS
    'customer name';

COMMENT ON COLUMN lga.lga_size IS
    'customer adress';

COMMENT ON COLUMN lga.lga_contact_name IS
    'customer phone';

COMMENT ON COLUMN lga.lga_contact_phone IS
    'contact phone of LGA';

ALTER TABLE lga ADD CONSTRAINT entity_1_pk PRIMARY KEY ( lga_code );

CREATE TABLE loan (
    loan_id              CHAR(8) NOT NULL,
    borrower_no          CHAR(4) NOT NULL,
    loan_datetime        DATE NOT NULL,
    loan_due_date        DATE NOT NULL,
    loan_return_datetime DATE,
    bookcopy_id          CHAR(4) NOT NULL,
    branch_code          CHAR(3) NOT NULL
);

COMMENT ON COLUMN loan.loan_id IS
    'loan''s unique identifer';

COMMENT ON COLUMN loan.borrower_no IS
    'Borrower''s unique identifer';

COMMENT ON COLUMN loan.loan_datetime IS
    'date and time recorded of a book when it''s borrowed from a loan';

COMMENT ON COLUMN loan.loan_due_date IS
    'deadline date and time of returning a book';

COMMENT ON COLUMN loan.loan_return_datetime IS
    'actual return date and time of a book when it''s recorded';

COMMENT ON COLUMN loan.bookcopy_id IS
    'unique identifer of each book copy';

COMMENT ON COLUMN loan.branch_code IS
    'Unique identifier for each branch';

ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_id );

ALTER TABLE loan
    ADD CONSTRAINT loan_uq UNIQUE ( borrower_no,
                                    bookcopy_id,
                                    branch_code,
                                    loan_datetime );

CREATE TABLE manager (
    manager_id         CHAR(4) NOT NULL,
    manager_first_name VARCHAR2(50) NOT NULL,
    manager_last_name  VARCHAR2(50) NOT NULL,
    manager_phone      VARCHAR2(50) NOT NULL,
    branch_code        CHAR(3) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'unique identifer of manager';

COMMENT ON COLUMN manager.manager_first_name IS
    'first name of manger';

COMMENT ON COLUMN manager.manager_last_name IS
    'last name of manager';

COMMENT ON COLUMN manager.manager_phone IS
    'contact phone of manager';

COMMENT ON COLUMN manager.branch_code IS
    'Unique identifier for each branch';

CREATE UNIQUE INDEX manager__idx ON
    manager (
        branch_code
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE publisher (
    publisher_id   CHAR(4) NOT NULL,
    publisher_name VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_id IS
    'unique identifer of publisher';

COMMENT ON COLUMN publisher.publisher_name IS
    'publisher''s name';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

CREATE TABLE reservation (
    reservation_id       CHAR(8) NOT NULL,
    borrower_no          CHAR(4) NOT NULL,
    reservation_datetime DATE NOT NULL,
    bookcopy_id          CHAR(4) NOT NULL,
    branch_code          CHAR(3) NOT NULL
);

COMMENT ON COLUMN reservation.reservation_id IS
    'unique identifer of a reservation';

COMMENT ON COLUMN reservation.borrower_no IS
    'Borrower''s unique identifer';

COMMENT ON COLUMN reservation.reservation_datetime IS
    'date and time of the reservation was settled';

COMMENT ON COLUMN reservation.bookcopy_id IS
    'unique identifer of each book copy';

COMMENT ON COLUMN reservation.branch_code IS
    'Unique identifier for each branch';

ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( reservation_id );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_uq UNIQUE ( borrower_no,
                                           bookcopy_id,
                                           branch_code,
                                           reservation_id,
                                           reservation_datetime );

CREATE TABLE subject (
    subject_id   CHAR(4) NOT NULL,
    subject_desc VARCHAR2(150) NOT NULL
);

COMMENT ON COLUMN subject.subject_id IS
    'subject id for identifying the subject';

COMMENT ON COLUMN subject.subject_desc IS
    'description of the subject';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

ALTER TABLE catalogue_author
    ADD CONSTRAINT author_code_fk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE isbn
    ADD CONSTRAINT book_type_id_fk FOREIGN KEY ( book_type_id )
        REFERENCES book_type ( book_type_id );

ALTER TABLE loan
    ADD CONSTRAINT bookcopy_id_fk FOREIGN KEY ( bookcopy_id,
                                                branch_code )
        REFERENCES bookcopy ( bookcopy_id,
                              branch_code );

ALTER TABLE loan
    ADD CONSTRAINT borrower_no_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE reservation
    ADD CONSTRAINT borrower_no_fkv2 FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE manager
    ADD CONSTRAINT branch_code_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE borrower
    ADD CONSTRAINT branch_code_fkv2 FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE bookcopy
    ADD CONSTRAINT branch_code_fkv3 FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE reservation
    ADD CONSTRAINT branch_code_fkv4 FOREIGN KEY ( bookcopy_id,
                                                  branch_code )
        REFERENCES bookcopy ( bookcopy_id,
                              branch_code );

ALTER TABLE catalogue_author
    ADD CONSTRAINT cat_call_no_fk FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue_entry ( cat_call_no );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT cat_call_no_fkv1 FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue_entry ( cat_call_no );

ALTER TABLE isbn
    ADD CONSTRAINT cat_call_no_fkv2 FOREIGN KEY ( cat_call_no )
        REFERENCES catalogue_entry ( cat_call_no );

ALTER TABLE borrower
    ADD CONSTRAINT class_id_fk FOREIGN KEY ( class_id )
        REFERENCES class ( class_id );

ALTER TABLE bookcopy
    ADD CONSTRAINT isbn_no_fk FOREIGN KEY ( isbn_code )
        REFERENCES isbn ( isbn_code );

ALTER TABLE branch
    ADD CONSTRAINT lga_code_fk FOREIGN KEY ( lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE fine
    ADD CONSTRAINT loan_id_fk FOREIGN KEY ( loan_id )
        REFERENCES loan ( loan_id );

ALTER TABLE branch
    ADD CONSTRAINT manager_id_fk FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE catalogue_entry
    ADD CONSTRAINT publisher_id_fk FOREIGN KEY ( publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE catalogue_subject
    ADD CONSTRAINT suject_id_fk FOREIGN KEY ( subject_id )
        REFERENCES subject ( subject_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            17
-- CREATE INDEX                             1
-- ALTER TABLE                             39
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

set echo OFF
spool OFF